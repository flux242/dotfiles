#!/bin/bash

# Uploads an image to imgur. Alternitevely if no input arguments are scecified
# select a window by clicking on it or select a region with mouse

# This function reads imgur client id from the IMGUR_ID var or from the keyring
#   python3 -c 'import keyring; print(keyring.get_password("imgur","'"$USER"'"))'
# One could put the imgur client id into the keyring using the following command:
#   python3 -c 'import keyring; keyring.set_password("imgur","'"$USER"'", "MY_CLIENT_ID")'
# where MY_CLIENT_ID is the token string obtained from https://api.imgur.com/oauth2/addclient

# Dependencies: scrot, curl

imgur() {
  local is_scrshot_created
  local do_upload=1
  local clientid=${IMGUR_ID}
  [ -n "$clientid" ] || clientid=$(python3 -c 'import keyring; p = keyring.get_password("imgur","'"$USER"'"); print() if p == None else print(p)')
  [ -n "$clientid" ] || { printf "No imgur client id specified. Get one using https://api.imgur.com/oauth2/addclient\n"; return 1; }
  local img="$1"
  [ -e "$img" ] || {
    img=$(mktemp '/tmp/imgur-XXXXXX.png')
    scrot -s "$@" $img >/dev/null 2>&1 || return
    is_scrshot_created=1
    printf "Upload the screenshot [y/n]? "; read LINE; [ "y" = "$LINE" ] || unset do_upload
  }
  [ -n "$do_upload" ] && {
    res=$(curl -sH "Authorization: Client-ID $clientid" -F "image=@$img" "https://api.imgur.com/3/upload")

    echo $res | grep -qo '"status":200' && link=$(echo $res | sed -e 's/.*"link":"\([^"]*\).*/\1/' -e 's/\\//g')
    if test -n "$link"; then
      printf $link | tee /dev/stderr | xclip -i -sel c; printf "\n"
    else
      echo "$res" > "/dev/stderr"
    fi
  }

  [ -n "$is_scrshot_created" ] && rm "$img"
}

imgur "$@"
